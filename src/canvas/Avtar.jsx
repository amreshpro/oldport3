/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 avtar.glb 
*/

import React, { Suspense, useRef } from 'react'
import { Center, OrbitControls, useGLTF } from '@react-three/drei'
import FallbackLoader from './FallbackLoader'
import { Canvas } from '@react-three/fiber'

 function AvtarModel(props) {
  const { nodes, materials } = useGLTF('/glb/avtar.glb')
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
    </group>
  )
}
useGLTF.preload('/glb/avtar.glb')



const Avtar = () => {
  return (
<Canvas
    shadows
    camera={{
      fov: 70,
      zoom:0.99,
      near: 1,
      far: 1000,
      position: [1.5,0.4,0.5],
    }}
  >
    <OrbitControls enableZoom={false}  enableDamping={true}   dampingFactor={0.07}
  // verttical rotate of model
  // minAzimuthAngle={-Math.PI / 4.5}
  // maxAzimuthAngle={Math.PI / 2.66}
  // horizontal rotate of model
  minPolarAngle={Math.PI / 3}
  maxPolarAngle={ - Math.PI / 3}
   />
    <ambientLight />
   
    <Suspense fallback={<FallbackLoader />}>
 
      <Center>
      
      <AvtarModel/>
      </Center>
    </Suspense>
  </Canvas>
  )
}
export default Avtar